version: '3.8'
services:
  posts:
    profiles: [ "application" ]
    build:
      context: ./posts/
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - posts-db
      - kafka
  posts-db:
    image: postgres:14.1-alpine
    ports:
      - "5555:5432"
    environment:
      POSTGRES_DB: posts
      POSTGRES_HOST_AUTH_METHOD: trust
  comments:
    profiles: [ "application" ]
    build:
      context: ./comments/
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - comments-db
      - kafka
  comments-db:
    image: postgres:14.1-alpine
    ports:
      - "4444:5432"
    environment:
      POSTGRES_DB: comments
      POSTGRES_HOST_AUTH_METHOD: trust
  zookeeper:
    image: confluentinc/cp-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test:
        [ "CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181" ]
      interval: 30s
      timeout: 10s
      retries: 4
  prometheus:
    image: prom/prometheus:v2.31.1
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
  grafana:
    image: grafana/grafana:8.2.5
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
  loki:
    image: grafana/loki:2.4.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./grafana/loki:/etc/loki
  promtail:
    image: grafana/promtail:2.4.0
    command: -config.file=/etc/promtail/promtail-config.yml
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./grafana/promtail:/etc/promtail
  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"